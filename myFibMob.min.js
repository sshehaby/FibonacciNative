var TIM;var anim=null;var myAnym=null;var runIt=!0;var backGrCol='#7395ae'
var already='#8bb39f'
var base;function foo(){if(typeof foo.counter=='undefined'){foo.counter=0}
foo.counter++;return foo.counter}
class MyAnim{static animID;constructor(){this.anim=null;runIt=!0;console.log("New Anim "+MyAnim.animID);MyAnim.animID=foo()}
static reset(){if(anim){runIt=!1;window.cancelAnimationFrame(anim);anim=null}}
set(val,rtim=1,howLong=0){if(!tree)return;if(anim)MyAnim.reset();TIM=parseInt(rtim*1000);var date=Date.now();var blink=0;var counter=0;var howLong=howLong;var animID=MyAnim.animID;var animate2=function(){if(animID<MyAnim.animID)return;x=Date.now();if(x-date>TIM){console.log("2");date=x;if(tree.arrayNodesXX.length){var tup=tree.arrayNodesXX[0];if(!tup){drawNodeWithScale(tree.root);tree.arrayNodesXX.shift();return}else{tree.arrayNodesXX.shift();var node=tup.node;drawNodeWithScale(node,tup.color,tup.text);console.log(""+node.data+" "+" "+tup.color+" "+tup.text);if(tup.fib)clearElement(tup.fib[0],tup.fib[1],tup.fib[2]);blink=1-blink;var cn;if(blink)cn=tree.root.colors[1];else cn="red";context.save();context.translate(width/2*(1.0-scale),0);context.scale(scale,1);Node.drawNode(tree.root,cn,base);context.restore()}}}
if(runIt)window.requestAnimationFrame(animate2)}
var animate1=function(){if(animID<MyAnim.animID)return;x=Date.now();if(x-date>TIM){counter ++;if(howLong&&counter>howLong){counter=0;runIt=!1;window.cancelAnimationFrame(anim);anim=null;f1();return}
date=x;blink=1-blink;var cn;if(blink)cn='#fce6e6';else cn="#e6baba";context.save();context.translate(width/2*(1.0-scale),0);context.scale(scale,1);Node.drawNode(tree.root,cn);context.restore()}
if(runIt)window.requestAnimationFrame(animate1)};if(val==0)anim=animate1;else anim=animate2;runIt=!0;window.requestAnimationFrame(anim)}}
var width;var height;var canvas
var context
var interval=window.setInterval(function(){},1000);var key;function f1(){if(divFlag)return;MyAnim.reset();console.log("World!");tree.computeTerminals();context.save();context.translate(width/2*(1.0-scale),0);context.scale(scale,1);tree.drawAllNodes();context.restore()}
function waitThenDo(t,func){setTimeout(()=>{func()},t)}
function computeXYParent(node){function compare(a,b){if(a.extra>b.extra)return 1;if(b.extra>a.extra)return-1;return 0}
function compLft(node,extra,fact,depth=0){if(node){node.extra=extra;node.depth=depth;compLft(node.left,extra-fact,fact/4,depth+1);compLft(node.right,extra+fact,fact/4,depth+1);bff.push(node)}}
function reWhatever(){var num=-parseInt(bff.length/2);var i;for(i=0;i<bff.length;i++)bff[i].extra=num++}
var bff=[];compLft(node,0,1.0);bff.sort(compare);reWhatever()}
var addHV=function(node,startX,startY,r,deltaX=0){if(node){if(!node.parent){node.x=startX+node.extra*(20);node.y=startY}else{node.x=startX+node.extra*(r+deltaX);node.y=startY+3*node.depth*r}
node.r=r;addHV(node.left,startX,startY,r,deltaX);addHV(node.right,startX,startY,r,deltaX)}}
var tree=null;var Radius=20;var Style=0;var Delta=10;var myarr=null;function createFibTree(){runIt=!1;if(anim){MyAnim.reset();console.log("resetx")}
var myAnim=new MyAnim();canvas=document.getElementById('my-canvas');context=canvas.getContext('2d');width=canvas.width;height=canvas.height;context.fillStyle=backGrCol
context.fillRect(0,0,width,height);context.beginPath();scale=parseFloat(document.getElementById('myRange').value/100);context.save();context.translate(width/2*(1.0-scale),0);context.scale(scale,1);context.font="bold 20px Courier New";x=document.getElementsByName("DrawingStyle");if(x[0].checked)Style=0;else Style=1;Delta=parseInt(document.getElementById('delta').value);if(isNaN(Delta)||Delta<0){alert('Enter a number >=0');document.getElementById('delta').value=10;return}
divFlag=!1;document.getElementById("dq").disabled=!1;document.getElementById("dq").style.background="#89b7d9"
document.getElementById("mm").disabled=!1;document.getElementById("dp").disabled=!1;document.getElementById("mm").style.background="#89b7d9"
document.getElementById("dp").style.background="#89b7d9"
MyAnim.reset();input=document.getElementById('base');document.getElementById('base').scrollIntoView({behavior:'smooth',inline:'center',block:'center'});base=parseInt(input.value);if(isNaN(base)||base<1){alert('Enter a number >0');input.value=5;return}
var rtim1=parseFloat(document.getElementById('RefTime1').value);if(isNaN(rtim1)||rtim1<0||rtim1>10){alert('Enter a number >0 and <10');document.getElementById('RefTime1').value=1.0;return}
var tim1=parseFloat(document.getElementById('Time1').value);if(isNaN(tim1)||tim1<1||tim1>30){alert('Enter a number >=1 and <30');document.getElementById('Time1').value=10;return}
tree=new Tree(base);tree.createTree();if(Style){computeXYParent(tree.root);addHV(tree.root,width/2,80,Radius,Delta)}else computeGeometry(tree.root,width/2,80,Radius,0);Tree.drawLines(tree.root);tree.drawAllNodes();context.restore();console.log("Len:"+tree.arrayNodes.length);while(tree.stopWatch);myAnim.set(0,rtim1,tim1);return;tr.forceUpdate();layer.draw();var line=new Konva.Line({x:0,y:0,points:[800,100,820,200],stroke:'black',tension:1});group.add(line);drawCircleText(800,100,20,"white",'9',"black");drawCircleText(820,200,20,"white",10,"black")}
function repTree(){if(tree){var x=document.getElementsByName("DrawingStyle");if(x[0].checked)Style=0;else Style=1;Delta=parseInt(document.getElementById('delta').value);if(Style){computeXYParent(tree.root);addHV(tree.root,width/2,80,Radius,Delta)}else computeGeometry(tree.root,width/2,80,Radius,0);doSome()}}
function doSome(){if(tree){var imgData=null;if(lastTable)imgData=context.getImageData(lastTable[0]-1,lastTable[1]-1,lastTable[2]+2,lastTable[5]+2);scale=parseFloat(document.getElementById('myRange').value/100);context.fillStyle=backGrCol;context.fillRect(0,0,width,height);context.save();context.translate(width/2*(1.0-scale),0);context.scale(scale,1);context.beginPath();Tree.drawLines(tree.root);tree.drawAllNodes();console.log("xxx");context.restore();if(lastTable)context.putImageData(imgData,lastTable[0]-1,lastTable[1]-1)}}
function drawCircleText(x,y,r,fillCircle,txt,fillText="black"){context.beginPath();context.arc(x,y,r,0,2*Math.PI);context.fillStyle=fillCircle;context.fill();context.stroke();context.closePath();context.font="bold 20px Courier New";var text=txt.toString();var metrics=context.measureText(text);x=parseInt(x-metrics.width/2);y=parseInt(y-(metrics.actualBoundingBoxAscent-metrics.actualBoundingBoxDescent-r));context.fillStyle=fillText;context.fillText(text,x,y)}
function drawArr(oldArray,arr,x,y,w,h,fill,middle=!0){if(oldArray){for(i=0;i<oldArray.length;i++)oldArray[i][0].destroy()}
var len=arr.length;var shapes=[]
if(middle){x=parseInt(width/2-len*w/2)}
for(i=0;i<len;i++){shapes.push([drawRectangleText(x,y,w,h,fill,arr[i],"black"),x,y,w,h]);x+=w}
return shapes}
function hideArray(shapes){if(!shapes)return;var i;for(i=0;i<shapes.length;i++)shapes[i][0].hide();}
function showArray(shapes){var i;for(i=0;i<shapes.length;i++)shapes[i][0].show();}
function redrawArr(shape,val,fill){var x=shape[1];var y=shape[2];var w=shape[3];var h=shape[4];shape[0].destroy();return([drawRectangleText(shape[1],shape[2],shape[3],shape[4],fill,val,"black"),x,y,w,h])}
function drawRectangleText(x,y,w,h,fillRect,txt,fillText){var rectangle=new Konva.Group({x:x,y:y,width:w,height:h,rotation:0,});rectangle.add(new Konva.Rect({width:w,height:h,fill:fillRect,stroke:'black',}));rectangle.add(new Konva.Text({text:txt,fontSize:24,fontFamily:'Calibri',fill:fillText,width:w,padding:5,align:'center'}));group.add(rectangle);tr.forceUpdate();layer.draw();console.log(rectangle.width());return rectangle}
class Node{constructor(data,parent){this.left=null;this.right=null;this.parent=parent;this.depth=0;this.extra=0;this.shape=null;this.data=data;this.value=-1;this.status=0;this.touch=!1;this.colors=["#fce6e6","#b0d0e8","#cdf7ee",already];this.x=0;this.y=0;this.r=0}
static drawNode(node,col=null,txt=null){var disp=node.data;if(node.value!=-1)disp=node.value;if(!txt)txt=disp;if(!col)col=node.colors[node.status];node.shape=drawCircleText(node.x,node.y,node.r,col,txt,"black")}
static getColor(node){return node.colors[node.status]}
static changeColor(node,color){node.shape[0].fill(color)}
static changeText(node,txt){var txtShape=node.shape[1];console.log("YYYYYYYYYYYYY"+txtShape.x()+" "+node.x+" "+node.r);var xxxx=node.x-(txt<10?node.r/4:node.r/2)
txtShape.x(xxxx);txtShape.text(txt)}}
class Tree{constructor(num){this.num=num;this.root=null;this.count=0;this.stopWatch=!0;this.array=[];this.array.length=num;this.arrayNodes=[];this.arrayNodesXX=[];this.status=0;var i;for(i=0;i<num;i++)this.array[i]=-1}
computeTerminalsX(node=this.root){if(node){if(node.data<2){node.value=1;node.status=2;node.touch=!0}else{node.value=-1;node.status=0;node.touch=!0}
this.computeTerminalsX(node.left);this.computeTerminalsX(node.right)}}
computeTerminals(){this.computeTerminalsX(tree.root);tree.status=1}
children(node,n){if(node){this.arrayNodes.push(node);if(n>=2){node.left=new Node(n-2,node);this.children(node.left,n-2);this.count++}else node.left=null;if(n>=1){node.right=new Node(n-1,node);this.children(node.right,n-1);this.count++}else return node.right=null;return node}else return null}
createTree(){var n=this.num;this.root=new Node(n,null);this.count=1;this.children(this.root,n);console.log(this.count);var st=getAllNodes(this.root,0);console.log(st)}
static getDepth(node){if(!node)return 0;var l=Tree.getDepth(node.left);var r=Tree.getDepth(node.right);return(l>r)?l+1:r+1}
drawAllNodes(){Tree.drawNodes(this.root,null);this.stopWatch=!1}
static drawNodes(node,prev){if(node){Node.drawNode(node);var prevNode=prev;Tree.drawNodes(node.left,node);Tree.drawNodes(node.right,node)}}
static drawLine(x,y,toX,toY){var moveToX=x;var moveToY=y+Radius;var lineToX=toX;var lineToY=toY-Radius;context.beginPath();context.moveTo(moveToX,moveToY);context.lineTo(lineToX,lineToY);context.stroke();context.closePath()};static drawLines(node,prev=null){if(node){var prevNode=prev;if(prevNode)Tree.drawLine(prevNode.x,prevNode.y,node.x,node.y);Tree.drawLines(node.left,node);Tree.drawLines(node.right,node)}}}
function getAllNodes(node,pol){function inOrder(node){if(node){inOrder(node.left);result+=''+node.data.toString()+'  ';inOrder(node.right)}}
function preOrder(node){if(node){result+=''+node.data.toString()+'  ';preOrder(node.left);preOrder(node.right)}}
function postOrder(node){if(node){postOrder(node.left);postOrder(node.right);result+=''+node.data.toString()+' '}}
function getNonLeaf(node){if(node){getNonLeaf(node.left);getNonLeaf(node.right);if(node.data>1)result.push(node)}}
switch(pol){case 0:var result='In---Order : ';inOrder(node);break
case 1:var result='Pre--Order : ';preOrder(node);break
case 2:var result='Post-Order : ';postOrder(node);break
case 77:var result=[];getNonLeaf(node);break}
return result}
function travPreorder(node){function preOrder(node){if(node){result+=''+node.data.toString()+'  ';preOrder(node.left);preOrder(node.right)}}
var result='Pre--Order : ';preOrder(node);return result}
var leftCoordinate=function(x,y,r,depth){delta=Math.pow(1.7,10-depth)+2*r;var d=2*r*Math.pow(2,depth-1);return{cx:(x-(delta)),cy:(y+(3*r))}};var rightCoordinate=function(x,y,r,depth){delta=Math.pow(1.7,10-depth)+2*r;var d=2*r*Math.pow(2,depth-1);return{cx:(x+(delta)),cy:(y+(3*r))}};var computeGeometry=function(node,x,y,r,depth){if(node){node.x=x;node.y=y;node.r=r;node.depth=depth;if(node.left){var xyz=leftCoordinate(x,y,r,depth);computeGeometry(node.left,xyz.cx,xyz.cy,r,depth+1)}
if(node.right){var xy=rightCoordinate(x,y,r,depth);computeGeometry(node.right,xy.cx,xy.cy,r,depth+1)}}}
var drawAll=function(node,prev){if(node){node.draw();prevNode=prev;if(prevNode){var line=new Line();line.draw(prevNode.getX(),prevNode.getY(),node.x,node.y,prevNode.getRadius(),node.ctx)}
drawAll(node.left,node);drawAll(node.right,node)}}
class ColText{constructor(node,c,t,fib=null){this.color=c;this.text=t;this.node=node;this.fib=fib}}
var dc=function(node){if(node){if(node.data<1){tree.arrayNodesXX.push(new ColText(node,already,1));node.value=1;node.status=3;return 1}
node.status=1;var cmd1=new ColText(node,Node.getColor(node),node.data);tree.arrayNodesXX.push(cmd1);node.value=dc(node.left)+dc(node.right);node.status=2;cmd1=new ColText(node,Node.getColor(node),node.value);tree.arrayNodesXX.push(cmd1);return node.value}else{return 1}}
var divFlag=!1;var drawNodeWithScale=function(node,col=null,text=null){context.save();context.translate(width/2*(1.0-scale),0);context.scale(scale,1);if(node.data==5){;console.log(node.value)}
Node.drawNode(node,col,text);context.restore()}
var divConq=function(){if(!tree)return;clearArray();divFlag=!0;var rtim1=parseFloat(document.getElementById('RefTime2').value);if(isNaN(rtim1)||rtim1<0||rtim1>10){alert('Enter a number >0 and <10');document.getElementById('RefTime2').value=0.25;return}
tree.computeTerminals();hideArray(myarr);myarr=null;for(i=0;i<tree.arrayNodes.length;i++){var n=tree.arrayNodes[i];if(!n.touch)continue;drawNodeWithScale(n);n.touch=!1}
if(!tree.status){if(anim)MyAnim.reset();return}
var myAnim=new MyAnim();myAnim.set(1,rtim1);tree.arrayNodesXX=[];var node=tree.root;dc(node);var cmd1=new ColText(tree.root,"green",tree.root.value);tree.arrayNodesXX.push(cmd1);tree.arrayNodesXX.push(null)}
tree=null;var dcm=function(node){if(node){if(fibArr[node.data]>-1){node.value=fibArr[node.data];var cmd1=new ColText(node,already,null);tree.arrayNodesXX.push(cmd1);node.status=3;return node.value}
if(node.data<1){tree.arrayNodesXX.push(new ColText(node,already,1));node.value=1;return 1}
node.status=1;var cmd1=new ColText(node,Node.getColor(node),null);tree.arrayNodesXX.push(cmd1);node.value=dcm(node.left)+dcm(node.right);node.status=2;cmd1=new ColText(node,Node.getColor(node),node.value,[node.data,already,node.value]);tree.arrayNodesXX.push(cmd1);fibArr[node.data]=node.value;return node.value}else{return 1}}
var fibArr;var meMoise=function(){if(!tree)return;divFlag=!0;var rtim1=parseFloat(document.getElementById('RefTime2').value);if(isNaN(rtim1)||rtim1<0||rtim1>10){alert('Enter a number >0 and <10');document.getElementById('RefTime2').value=0.25;return}
tree.computeTerminals();for(i=0;i<tree.arrayNodes.length;i++){var n=tree.arrayNodes[i];var n=tree.arrayNodes[i];if(!n.touch)continue;drawNodeWithScale(n);n.touch=!1}
if(!tree.status){if(anim)MyAnim.reset()}
tree.arrayNodesXX=[];var myAnim=new MyAnim();myAnim.set(1,rtim1);var node=tree.root;fibArr=[1,1];for(i=2;i<=tree.num;i++)fibArr.push(-1);drawArray(context,fibArr,50,30,0,10,middle=!0,"red");clearElement(0,col=already,text=fibArr[0]);clearElement(1,col=already,text=fibArr[1]);dcm(node);tree.arrayNodesXX.push(null)}
var dynP=function(){if(!tree)return;divFlag=!0;var rtim1=parseFloat(document.getElementById('RefTime2').value);if(isNaN(rtim1)||rtim1<0||rtim1>10){alert('Enter a number >0 and <10');document.getElementById('RefTime2').value=0.25;return}
tree.computeTerminals();if(!tree.status){if(anim)MyAnim.reset()}
for(i=0;i<tree.arrayNodes.length;i++){var n=tree.arrayNodes[i];var n=tree.arrayNodes[i];if(!n.touch)continue;if(n.data<2){n.status=3;drawNodeWithScale(n,already)}else drawNodeWithScale(n);n.touch=!1}
if(lastTable)clearArray();tree.arrayNodesXX=[];var myAnim=new MyAnim();myAnim.set(1,rtim1);var node=tree.root;fibArr=[1,1];for(i=2;i<=tree.num;i++)fibArr.push(-1);drawArray(context,fibArr,50,30,0,10,middle=!0,"red");clearElement(0,col=already,text=fibArr[0]);clearElement(1,col=already,text=fibArr[1]);var nonLeafs=getAllNodes(tree.root,77);var i;for(i=0;i<nonLeafs.length;i++){var node=nonLeafs[i];if(fibArr[node.data]>-1){node.value=fibArr[node.data];node.status=3;var cmd1=new ColText(node,already,node.value,[node.data,already,node.value]);tree.arrayNodesXX.push(cmd1)}else{node.value=node.left.value+node.right.value
node.status=2;cmd1=new ColText(node,Node.getColor(node),node.value,[node.data,already,node.value]);tree.arrayNodesXX.push(cmd1);fibArr[node.data]=node.value}}
tree.arrayNodesXX.push(null)}
var lastTable=null;var clearArray=function(col=null){if(!lastTable)return
if(!col)col=backGrCol;context.fillStyle=col;context.fillRect(lastTable[0]-1,lastTable[1]-1,lastTable[2]+2,lastTable[5]+2);lastTable=null}
var clearElement=function(i,col=null,text=null){if(!lastTable)return
if(!col)col=backGrCol;context.fillStyle=col;context.fillRect(lastTable[0]+i*lastTable[4]+1,lastTable[1]+1,lastTable[4]-2,lastTable[5]-2);if(text)writeTextAt(context,text,lastTable[0]+i*lastTable[4]+lastTable[4]/2,lastTable[3])}
var drawArray=function(context,arr,w,h,startx,starty,middle=!1,col=null){context.font="bold 24px Courier New";var n=arr.length;var bw=w*n;var bh=h;var p=0;if(middle){cw=document.getElementById('my-canvas').width;p+=parseInt((cw-bw)/2);startx=0}
lastTable=[p+startx,starty,bw,bh+starty,w,h];if(col)clearArray(col);i=0;for(var x=0;x<=bw;x+=w){context.moveTo(p+startx+x,starty);context.lineTo(p+startx+x,bh+starty);if(i<n)writeTextAt(context,arr[i++],p+startx+x+w/2,bh+starty)}
for(var x=0;x<=bh;x+=bh){context.moveTo(p+startx,x+starty);context.lineTo(p+startx+bw,x+starty)}
context.strokeStyle="black";context.stroke();lastTable=[p+startx,starty,bw,bh+starty,w,h]}
var writeTextAt=function(context,text,x,y){text=text.toString();var metrics=context.measureText(text);x=parseInt(x-metrics.width/2);y=parseInt(y-(metrics.actualBoundingBoxAscent-metrics.actualBoundingBoxDescent)/2);context.strokeText(text,x,y)}